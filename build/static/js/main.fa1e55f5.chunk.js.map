{"version":3,"sources":["components/Utilities/Navbar.jsx","components/Routes/RestrictedRoutes.jsx","components/Utilities/Sidebar.jsx","components/NavbarComponents/Aboutus.jsx","components/NavbarComponents/Contactus.jsx","components/NavbarComponents/Services.jsx","components/Utilities/Button.jsx","components/UserComponents/CompleteReservations.jsx","components/Homepage.jsx","components/Authentication/AuthState.jsx","components/Authentication/Login.jsx","components/Utilities/Dashboard.jsx","components/Authentication/Signin.jsx","components/Utilities/Undefined.jsx","components/Authentication/ForgotPassword.jsx","components/Authentication/UsernameLogin.jsx","components/UserComponents/OccupantDetails.jsx","components/UserComponents/RoomList.jsx","components/UserComponents/RoomReservation.jsx","components/Routes/UnrestrictedRoutes.jsx","App.js","index.js"],"names":["Navbar","props","activeItem","fontStyle","fontWeight","sidebarHandler","isToggled","currentViewName","Fragment","className","map","linkItem","key","to","onClick","activeStyle","RestrictedRoutes","Component","component","path","render","Sidebar","toggleProperties","About","ContactUs","changeHandler","event","preventDefault","stateProperty","target","name","value","setState","contactForm","state","Firstname","Lastname","Phone","Email","Message","fieldNames","Object","keys","this","console","log","field","index","type","onChange","React","Services","Button","action","text","submitRegistration","logoutHandler","resetPassword","showRoomList","directToBookRoomPage","CompleteReservations","occupants_phoneHandler","occupants_phone","required","placeholder","Homepage","useState","sidebar","setSidebar","showSidebar","currentView","setCurrentView","changeView","viewName","match","authState","status","Login","handleChange","formChanges","loginForm","populateLoginFormDetails","handleLogin","axios","post","loginFormDetails","then","response","allowLogin","authstate","changeAuthState","catch","error","loginFormErrors","data","Password","formErrors","fieldName","fieldValue","populatedForm","formFieldNames","push","style","backgroundColor","border","borderColor","borderRadius","color","fontFamily","submitLogin","handleResetPassword","Dashboard","Signin","signupForm","populateSignupFormDetails","handleSignup","signupFormDetails","allowSignin","signupFormErrors","Undefined","minHeight","ForgotPassword","allowReset","UsernameLogin","Username","RoomReservation","formFieldChanges","roomReservationForm","updateReservationDetails","handleShowRoomList","firstname","roomReservationDetails","lastname","email","phone","duration","Duration","toggleRoomListDisplay","formErrorDetails","updatedformFields","formFields","toLowerCase","min","pathname","occupant_details","RoomList","bookingHandler","detail","room_details","permitRoomBooking","chosenRoomDetails","listOfRooms","get","heading","id","room_type","room_price","room_number","room_status","handleChangePhone","location","field_values","disabled","defaultValue","UnrestrictedRoutes","exact","OccupantDetails","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa1e55f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/navbarStyles.css\";\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\nimport 'animate.css';\r\n\r\n\r\nexport const Navbar = (props) => {\r\n   \r\n    const navLinkItems = [\"Home\", \"Services\", \"About\", \"Contact-us\"];\r\n\r\n    const activeItem = {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    };\r\n\r\n    // toggles the sidebar\r\n    const { sidebarHandler, isToggled, currentViewName} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <section className=\"site-name col-md-4\">\r\n                    <h3 className='animate__animated animate__heartBeat animate__infinite'>\r\n                        Hotel Celestial\r\n                    </h3>\r\n                </section>\r\n\r\n                <section className='navbar-buttons col-md-5'>\r\n                    {\r\n                        !isToggled ?\r\n                            <section className='button-styles'>\r\n                                {navLinkItems.map( linkItem => (\r\n                                    <span key={linkItem}>\r\n                                        <NavLink to='#'\r\n                                            onClick={ () => currentViewName(linkItem) } \r\n                                            className=\"btn text-white\" \r\n                                            activeStyle={activeItem}>\r\n                                            {linkItem}\r\n                                        </NavLink>\r\n                                    </span>\r\n                                ))}\r\n                            </section>\r\n                            :\r\n                            null\r\n                    }\r\n                </section>\r\n                \r\n                <section className='animate__animated animate__heartBeat animate__infinite nav-menu-bar'>\r\n                    {\r\n                        !isToggled ?\r\n                            <React.Fragment>\r\n                                <Link to='#'>\r\n                                    <FaIcons.FaBars onClick={ sidebarHandler }/>\r\n                                </Link>\r\n                                <h6 className='text-white'>More details here...</h6>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Link to='#'>\r\n                                    <AiIcons.AiOutlineClose onClick={ sidebarHandler } />\r\n                                    <h6 className='text-white'>Collapse details</h6>\r\n                                </Link>\r\n                            </React.Fragment>\r\n                    }\r\n                </section>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Navbar from \"../Utilities/Navbar\";\r\n\r\n\r\nexport const RestrictedRoutes = ({component: Component, path, ...props}) => {\r\n    // console.log(path, Component)\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <Navbar />\r\n                    <Route {...props} render={ props => {\r\n                        return <Route path={`/${path}`} component={Component} />\r\n                        }}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/sidebar.css\";\r\nimport \"animate.css\";\r\n\r\n\r\nexport const Sidebar = (props) => {\r\n    const navLinkItems = [\r\n        \"Make reservation\",\r\n        \"Complete your reservation\",\r\n        \"Home\",\r\n        \"Services\",\r\n        \"About\",\r\n        \"Contact-us\",\r\n    ];\r\n\r\n    const activeItem = {\r\n        fontStyle: \"italic\",\r\n        fontWeight: \"bold\",\r\n      };\r\n\r\n    const { currentViewName, sidebarHandler } = props;\r\n\r\n    // Wse can pass more than one function to a component.\r\n    // We'll only need to write a unified function in the receiving component\r\n    // which receives both functions and calls them as well.\r\n    const toggleProperties = (linkItem) => {\r\n        currentViewName(linkItem) \r\n\r\n        sidebarHandler()\r\n    }\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"sidebar\">\r\n            {navLinkItems.map( ( linkItem ) => (\r\n            <span key={linkItem} className=\"sidebar-menu\">\r\n                \r\n                <NavLink to={ linkItem !== \"Make reservation\" ?\r\n                            '#': '/celestial/occupant-details' } \r\n                        // The \"toggleProperties\"\r\n                        // function is the unified - function that calls both\r\n                        // functions being passed to the component.\r\n                        onClick={ () => toggleProperties(linkItem) } \r\n                        activeStyle={activeItem}>\r\n                    {linkItem}\r\n                </NavLink>\r\n            </span>\r\n            ))}\r\n        </div>\r\n        </section>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\n\r\nexport const About = () => {\r\n\r\n    return(\r\n        <section className='text-white'>\r\n            <h2>About Hotel - Celestial</h2>\r\n            <h5>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. <br/>\r\n                Et quas earum eaque nihil aliquam rem doloribus, <br/>\r\n                omnis quam provident architecto similique accusantium, <br/>\r\n                porro numquam aliquid pariatur ipsa magnam ab dicta.\r\n            </h5>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport '../styles/contactUsStyles.css';\r\n\r\n\r\nclass ContactUs extends React.Component  {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            contactForm: {\r\n                Firstname: '',\r\n                Lastname:'',\r\n                Phone: '',\r\n                Email:'',\r\n                Message:'',\r\n            }\r\n        };\r\n    };\r\n\r\n    changeHandler = (event) => {\r\n        event.preventDefault();\r\n        const stateProperty = {}\r\n\r\n        stateProperty[event.target.name] = event.target.value;\r\n        this.setState({ contactForm: stateProperty })\r\n    }\r\n\r\n    render(){\r\n        // map all fields in contact-form to 'fieldNames'\r\n        const fieldNames = Object.keys(this.state.contactForm)\r\n        console.log(\"\\n\\t fields: \", fieldNames)\r\n\r\n        return (\r\n            <div className='template-styling'>\r\n                <h2 className='text-white'> We'll Treat your requests/inquiries Kingly...</h2>\r\n                <section>\r\n                    {\r\n                        fieldNames.map( (field, index) => \r\n                            <ul key={ index }>\r\n                                <li className='form-group' >\r\n                                    <span className='field-title'> {field}: </span>\r\n                                    <input className='form-control'\r\n                                            type={ field === \"Phone\" ? \"tel\":\r\n                                                    field === \"Email\" ? \"email\" : \"text\" }\r\n                                            name={ field }\r\n                                            value={ this.state.contactForm[field] }\r\n                                            onChange= { this.changeHandler }\r\n                                        />\r\n                                </li>\r\n                            </ul>\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ContactUs;","import React from 'react';\r\n\r\n\r\nexport const Services = () => {\r\n    return (\r\n        <div>\r\n            <h2 className='text-white'> We render other services as well..</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport '../styles/buttonStyles.css';\r\nimport 'animate.css';\r\n\r\n\r\nclass Button extends React.Component{\r\n    render(){\r\n        const { action, text, path, submitRegistration,\r\n                 logoutHandler, resetPassword,\r\n                showRoomList, directToBookRoomPage } = this.props;\r\n\r\n        return(\r\n            <div className='btn-styles'>\r\n                {\r\n                    // Navigate user to \"Log -in\" page\r\n                    path === 'Forgot password ?' ?\r\n                        <Link to='/celestial/forgot-password' className='btn btn-secondary'>{path}</Link>\r\n                    :\r\n                    path === 'username-login' ?\r\n                        <Link to={`/celestial/${path}`} className='btn btn-info'>\r\n                            {action}\r\n                        </Link>\r\n                    :\r\n                    path === 'roomlist' ?\r\n                        <Link to={`/celestial/${path}`} onClick={ showRoomList } className='btn btn-info'>\r\n                            {action || text}\r\n                        </Link>\r\n                    :\r\n                    path === 'payment' ?\r\n                        <Link to={`/celestial/${path}`} onClick={ showRoomList } className='btn btn-payment'>\r\n                            {text}\r\n                        </Link>\r\n                    :\r\n                    // Submit 'sign-in form' for validation\r\n                    action === 'Sign up' ?\r\n                        <button className='btn btn-success' onClick={submitRegistration}>{action}</button>\r\n                    :\r\n                    action === 'Log out' ?\r\n                        <button className='btn btn-success' onClick={logoutHandler}>{action}</button>\r\n                    :\r\n                    action === 'Reset password' ?\r\n                        <button className='btn btn-success' onClick={resetPassword}>{action}</button>\r\n                    :\r\n                    action === 'Book room' ?\r\n                    <button className='btn btn-info' onClick={ directToBookRoomPage }>{action}</button>\r\n                    :\r\n                    <Link to='/celestial' className='btn btn-primary'>Go Back To Homepage</Link>\r\n\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../Utilities/Button';\r\n\r\n\r\nclass CompleteReservations extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            occupants_phone: ''\r\n        }\r\n    }\r\n\r\n    occupants_phoneHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ occupants_phone: event.target.value })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <h4> Please enter your phone number to proceed: </h4> \r\n                        <span>\r\n                            <input className='form-control'\r\n                                    type=\"tel\"\r\n                                    required='true'\r\n                                    name='phone'\r\n                                    value={ this.state.occupants_phone }\r\n                                    onChange={ this.occupants_phoneHandler }\r\n                                    placeholder='Please enter your phone number'\r\n                            /> <br/>\r\n                        </span>\r\n                        <strong>Please ensure the provided data is valid.</strong>     \r\n\r\n                        <span className='mt-4'>\r\n                            <Button path='payment'\r\n                                    text='Proceed to payment'\r\n                                    />\r\n                        </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default CompleteReservations;","import React, { useState } from \"react\";\r\nimport Navbar from \"./Utilities/Navbar\";\r\n\r\nimport './styles/homepageStyles.css';\r\nimport { Sidebar } from './Utilities/Sidebar';\r\n\r\nimport { About } from './NavbarComponents/Aboutus';\r\nimport ContactUs from './NavbarComponents/Contactus';\r\nimport { Services } from './NavbarComponents/Services';\r\nimport CompleteReservations  from './UserComponents/CompleteReservations';\r\n\r\n\r\nexport const Homepage = (props) => {\r\n\r\n    const [sidebar, setSidebar] = useState(false)\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    const [currentView, setCurrentView] = useState('')\r\n    const changeView = (viewName) => setCurrentView(`${viewName}`)\r\n\r\n    //=======================================================================\r\n    if(props.match.path === '/' || props.match.path === '/celestial'){\r\n\r\n        return (\r\n            <div className='welcome-screen'>\r\n                <section className='row navbar-section'>\r\n                    <section className='col'>\r\n                        {/* ****The currentViewName is passed as a prop to the Navbar\r\n                        component so as to the switch views (about, services and contact-us)\r\n                        without changing the url - path.\r\n                        ***** The isToggled prop is as well passed to the Navbar cmponent\r\n                        so as to aid in switching the sidebar component, when the horizontal -\r\n                        bars on the Navbar component is toggled. The sidebarHandler\r\n                        is the function that needs to be called in order to change the sidebar - \r\n                        state  */}\r\n                        <Navbar sidebarHandler={showSidebar} isToggled={sidebar}\r\n                                currentViewName={changeView} />\r\n                    </section>\r\n                </section>\r\n                    <section className='row'>\r\n                        <span className='sidebar col-md-3'>\r\n                            {\r\n                                sidebar ?\r\n                                    <Sidebar sidebarHandler={showSidebar}\r\n                                             currentViewName={changeView} />\r\n                                    :\r\n                                    null\r\n                                }\r\n                        </span>\r\n\r\n                        <h1 className='col welcome-text animate__animated animate__flash animate__infinite mt-5'>\r\n                            Hospitality, Kingly...\r\n                        </h1>\r\n                    </section>\r\n\r\n                    {\r\n                        currentView === 'About' ?\r\n                         <About />\r\n                        :\r\n                        currentView === 'Contact-us' ?\r\n                         <ContactUs />\r\n                        :\r\n                        currentView === 'Services' ?\r\n                         <Services />\r\n                        :\r\n                        currentView === 'Services' ?\r\n                         <CompleteReservations />\r\n                        :\r\n                        null\r\n                    }\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n","import React from \"react\";\r\n\r\nclass AuthState extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            authState: false\r\n        }\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.state.authState;\r\n    }\r\n\r\n    \r\n    changeAuthState(status){\r\n        this.setState({ authState: status });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthState();","import React from 'react';\r\nimport Button from \"../Utilities/Button\";\r\nimport authstate from \"./AuthState\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loginForm: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n            },\r\n\r\n            loginFormDetails: {},\r\n            formErrors: {},\r\n\r\n            allowLogin: false,\r\n            loginFormErrors: {},\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let formChanges = this.state.loginForm;\r\n        formChanges[event.target.name] = event.target.value;\r\n\r\n        this.setState({ loginForm: formChanges })\r\n        this.populateLoginFormDetails(event.target.name, event.target.value)\r\n    }\r\n\r\n    populateLoginFormDetails(fieldName, fieldValue){\r\n        let populatedForm = this.state.loginFormDetails;\r\n        populatedForm[fieldName] = fieldValue;\r\n\r\n        this.setState({ loginFormDetails: populatedForm })\r\n        // console.log(\"\\n\\t Form details: \", this.state.loginFormDetails)\r\n    }\r\n\r\n    handleLogin = () => {\r\n        axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n                    this.state.loginFormDetails)\r\n            .then( response => {\r\n                this.setState({ allowLogin: true })\r\n                authstate.changeAuthState(this.state.allowLogin)\r\n            }).catch( error => \r\n                    this.setState({ loginFormErrors: error.response.data })\r\n            )\r\n    }\r\n\r\n    render(){\r\n        // Make an array whose elements are the keys of the login-form\r\n        let formFieldNames = [];\r\n        for(let field in this.state.loginForm){\r\n            formFieldNames.push(field)\r\n        }\r\n\r\n        const formStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n            // borderImage: url(),\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='row'>\r\n                    <div className='col-5 mt-5 mb-3'> </div>\r\n                    <div className='mt-3 mb-2'><h2 >Log in:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-4 mb-3'> </div>\r\n                                    \r\n                    {/* use field names in \"formFieldNames\" array */}\r\n                    <div style={formStyle} className='col-3 ml-3' >\r\n                        {\r\n                            formFieldNames.map( (fieldName, index) => \r\n                            <div key={fieldName}>\r\n\r\n                                    <h5 className='mt-3'>{ fieldName }:</h5>\r\n                                    {/* if field propagates errors */}\r\n                                    <h4>{this.state.formErrors[fieldName]}</h4> \r\n\r\n                                    <input className='mt-3 mb-2 form-control' \r\n                                        type={ fieldName === 'Email' ? 'email': \"password\"} \r\n\r\n                                        placeholder={ index > 2 ? \"Ensure both password fields are the same\": \"\"} \r\n                                        name={fieldName}\r\n                                        value={this.state.loginForm[fieldName]}\r\n                                        onChange={this.handleChange}\r\n                                        /> \r\n                                        \r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className='row'>\r\n                            <div className='col-4 mr-4 mb-3 mt-3'>\r\n                                <Button action='Log in' submitLogin={this.handleLogin} path='dashboard'/>\r\n                            </div>\r\n                            \r\n                            <div className='col ml-3 mb-3 mt-3'>\r\n                                <Button path='Forgot password ?'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row mt-3'>\r\n                            <div className='col-10 mb-2 ml-5'>\r\n                                <Button action='Log in with username instead' \r\n                                    path='username-login' \r\n                                    resetPassword={this.handleResetPassword}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nexport const Dashboard = () => {\r\n    return(\r\n        <div>\r\n            <h2>Dashboard</h2>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from \"../Utilities/Button\";\r\nimport axios from \"axios\";\r\n\r\nimport authstate from \"./AuthState\";\r\n\r\nimport { RestrictedRoutes } from \"../Routes/RestrictedRoutes\";\r\n\r\nimport {Dashboard} from \"../Utilities/Dashboard\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Signin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            signupForm: {\r\n                'Firstname'       : \"\",\r\n                'Lastname'        : \"\",\r\n                'Email'           : \"\",\r\n                'Password'        : \"\",\r\n                'Confirm password': \"\"\r\n            },\r\n\r\n            signupFormDetails: {}, // This object holds acceptable form details for submission\r\n\r\n            signupFormErrors: {},\r\n\r\n            allowSignin: false\r\n        }\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let formChanges = this.state.signupForm;\r\n        formChanges[event.target.name] = event.target.value;\r\n\r\n        this.setState({ signupForm: formChanges })\r\n        this.populateSignupFormDetails(event.target.name, event.target.value)\r\n    }\r\n\r\n    populateSignupFormDetails(fieldName, fieldValue){\r\n        let populatedForm = this.state.signupFormDetails;\r\n        populatedForm[fieldName] = fieldValue;\r\n\r\n        this.setState({ signupFormDetails: populatedForm })\r\n        // console.log(\"\\n\\t Form details: \", this.state.signupFormDetails)\r\n    }\r\n\r\n    handleSignup = (event) =>{\r\n        console.log(\"\\n\\t Props: signing in...\")\r\n        \r\n\r\n        axios.post(\"http://localhost:8000/auth/registration/\",\r\n                    this.state.signupFormDetails)\r\n             .then( response => {\r\n                //  if promise was fulfilled, push user to \"verificationEmailSent page\"\r\n                this.setState({ allowSignin: true })\r\n                authstate.changeAuthState( this.state.allowSignin )\r\n                console.log(response.data)\r\n\r\n             }).catch( error => {\r\n                //  If there are errors in the form, display errors, but user remains on\r\n                // the sign-up page\r\n                this.setState({ signupFormErrors: error.response.data })\r\n\r\n                console.log(error.response.data)\r\n            })\r\n    }\r\n\r\n\r\n    render(){\r\n        // Make an array whose elements are the keys of the signup-form\r\n        let formFieldNames = [];\r\n        for(let field in this.state.signupForm){\r\n            formFieldNames.push(field)\r\n        }\r\n\r\n        const formStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='row'>\r\n                    <div className='col-5 mt-5 mb-3'> </div>\r\n                    <div className='mt-3 mb-2'><h2 >Sign up:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-4 mb-3'> </div>\r\n                                    \r\n                    {/* use field names in \"formFieldNames\" array */}\r\n                    <div style={formStyle} className='col-3 ml-3' >\r\n                        {\r\n                            formFieldNames.map( (fieldName, index) => \r\n                                <div key={fieldName}>\r\n\r\n                                    <h5 className='mt-3'>{ fieldName }:</h5>\r\n                                    {/* if field propagates errors */}\r\n                                    <h4>{this.state.signupFormErrors[fieldName]}</h4> \r\n\r\n                                    <input className='mt-3 mb-2 form-control' \r\n                                        type={ fieldName === 'Email' ? 'email': index <= 1 ? \"text\": \"password\"} \r\n                                        placeholder={ index > 2 ? \"Ensure both password fields are the same.\": \"\"} \r\n                                        name={fieldName}\r\n                                        value={this.state.signupForm[fieldName]}\r\n                                        onChange={this.handleChange}\r\n                                        /> \r\n                                        \r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className='mb-3 mt-3'>\r\n                            <Button action='Sign up' submitRegistration={this.handleSignup} path='dashboard'/>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        this.state.allowSignin === true ?\r\n                        <RestrictedRoutes path='/dashboard' component={Dashboard} />\r\n                        :\r\n                        <Redirect to='/signin' />\r\n                    }\r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport const Undefined = () =>{\r\n    const style = {\r\n        fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n        backgroundColor: \"aquamarine\",\r\n        minHeight: \"100vh\",\r\n        fontStyle: \"italic\",\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n      }\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n            <div className='row' style={style}>\r\n                <div className='col-4 mt-5 mb-5'></div>\r\n                <div className='col-4 mt-5'>\r\n                    <h1>PAGE NOT FOUND</h1>\r\n                    <div className='ml-5 col-8'>\r\n                        <Button />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n           \r\n\r\n        </React.Fragment>\r\n\r\n        \r\n    )\r\n}","import React from \"react\";\r\nimport Button from \"../Utilities/Button\";\r\nimport authstate from \"./AuthState\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nclass ForgotPassword extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            Email: \"\",\r\n\r\n            allowReset: false,\r\n            formErrors: {}\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = () =>{\r\n\r\n    }\r\n\r\n    handleResetPassword = () => {\r\n        axios.post(\"http<//127.0.0.1:8000/auth/reset-password\",\r\n                    this.state.Email)\r\n             .then( response => {\r\n                this.setState({ allowReset: true })\r\n                authstate.changeAuthState(this.state.allowReset)\r\n                })\r\n            .catch( error => {\r\n                this.setState({ formErrors: error.response.data })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const signupStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n          }\r\n\r\n        return(\r\n            <div>\r\n                <div className='row mt-5'>\r\n                    <div className='col-5 mt-5'></div>\r\n\r\n                </div>\r\n                <div className='row mt-5'>\r\n                    <div className='col-4 ml-5'></div>\r\n\r\n                    <div className='col-3 ml-4'><h2>Password Reset:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-3 mr-5'></div>\r\n\r\n                    <div style={signupStyle} className='col-5 form-group'>\r\n                        <h5 className='mt-2'>Email:</h5>\r\n                        {this.state.formErrors['Email']}\r\n                        <input className='form-control mb-3'\r\n                            type=\"email\" \r\n                            name=\"Email\" \r\n                            onChange={this.handleChange}\r\n                            placeholder= \"Please enter the email-address you provided upon registration.\"\r\n                            value={this.state.Email}/>\r\n\r\n                        <div className='row mb-2 mt-2'>\r\n                            <div className='col-6'>\r\n                                <Button action='Reset password' />\r\n                            </div>\r\n                            <div className='col ml-4'>\r\n                                <Button action='Log in with username instead' \r\n                                        path='username-login' \r\n                                        resetPassword={this.handleResetPassword}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport Button from \"../Utilities/Button\";\r\nimport authstate from \"./AuthState\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nclass UsernameLogin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loginForm: {\r\n                Username: \"\",\r\n                Password: \"\",\r\n            },\r\n\r\n            loginFormDetails: {},\r\n            formErrors: {},\r\n\r\n            allowLogin: false,\r\n            loginFormErrors: {},\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let formChanges = this.state.loginForm;\r\n        formChanges[event.target.name] = event.target.value;\r\n\r\n        this.setState({ loginForm: formChanges })\r\n        this.populateLoginFormDetails(event.target.name, event.target.value)\r\n    }\r\n\r\n    populateLoginFormDetails(fieldName, fieldValue){\r\n        let populatedForm = this.state.loginFormDetails;\r\n        populatedForm[fieldName] = fieldValue;\r\n\r\n        this.setState({ loginFormDetails: populatedForm })\r\n        // console.log(\"\\n\\t Form details: \", this.state.loginFormDetails)\r\n    }\r\n\r\n    handleLogin = () => {\r\n        axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n                    this.state.loginFormDetails)\r\n            .then( response => {\r\n                this.setState({ allowLogin: true })\r\n                authstate.changeAuthState(this.state.allowLogin)\r\n            }).catch( error => \r\n                    this.setState({ loginFormErrors: error.response.data })\r\n            )\r\n    }\r\n\r\n    render(){\r\n        // Make an array whose elements are the keys of the login-form\r\n        let formFieldNames = [];\r\n        for(let field in this.state.loginForm){\r\n            formFieldNames.push(field)\r\n        }\r\n\r\n        const formStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n            // borderImage: url(),\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='row'>\r\n                    <div className='col-5 mt-5 mb-3'> </div>\r\n                    <div className='mt-3 mb-2'><h2 >Log in:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-4 mb-3'> </div>\r\n                                    \r\n                    {/* use field names in \"formFieldNames\" array */}\r\n                    <div style={formStyle} className='col-3 ml-3' >\r\n                        {\r\n                            formFieldNames.map( (fieldName, index) => \r\n                            <div key={fieldName}>\r\n\r\n                                    <h5 className='mt-3'>{ fieldName }:</h5>\r\n                                    {/* if field propagates errors */}\r\n                                    <h4>{this.state.formErrors[fieldName]}</h4> \r\n\r\n                                    <input className='mt-3 mb-2 form-control' \r\n                                        type={ fieldName === 'Email' ? 'email': \"password\"} \r\n\r\n                                        placeholder={ index > 2 ? \"Ensure both password fields are the same\": \"\"} \r\n                                        name={fieldName}\r\n                                        value={this.state.loginForm[fieldName]}\r\n                                        onChange={this.handleChange}\r\n                                        /> \r\n                                        \r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className='row'>\r\n                            <div className='col-4 mr-4 mb-3 mt-3'>\r\n                                <Button action='Log in' submitLogin={this.handleLogin} path='dashboard'/>\r\n                            </div>\r\n                            <div className='col ml-3 mb-3 mt-3'>\r\n                                <Button path='Forgot password ?'/>\r\n                            </div>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameLogin;","import React from \"react\";\r\nimport Button from \"../Utilities/Button\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"animate.css\";\r\nimport \"../styles/occupantDetails.css\";\r\n\r\n\r\nclass RoomReservation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      roomReservationForm: {\r\n        Firstname: \"\",\r\n        Lastname: \"\",\r\n        Email: \"\",\r\n        Phone: \"\",\r\n        Duration: \"\",\r\n      },\r\n\r\n      roomReservationDetails: {},\r\n\r\n      formErrorDetails: {},\r\n\r\n      // This variable helps in toggling the display of room list when a\r\n      // user fills in the room-reservation form\r\n      toggleRoomListDisplay: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let formFieldChanges = this.state.roomReservationForm;\r\n    formFieldChanges[event.target.name] = event.target.value;\r\n\r\n    this.setState({ roomReservationForm: formFieldChanges });\r\n    // pass values\r\n    this.updateReservationDetails(event.target.name, event.target.value);\r\n  };\r\n\r\n  updateReservationDetails(fieldName, fieldValue) {\r\n    let updatedformFields = this.state.roomReservationDetails;\r\n    updatedformFields[fieldName] = fieldValue;\r\n\r\n    this.setState({ roomReservationDetails: updatedformFields });\r\n\r\n    console.log(\"\\n\\t Details: \", this.state.roomReservationDetails);\r\n  }\r\n\r\n  handleShowRoomList = (event) => {\r\n    event.preventDefault();\r\n    // Submit users data in order to reserve room(s)\r\n    axios\r\n      .post(\"http://localhost:8000/celestial/create-occupant/\", {\r\n        firstname: this.state.roomReservationDetails.Firstname,\r\n        lastname: this.state.roomReservationDetails.Lastname,\r\n        email: this.state.roomReservationDetails.Email,\r\n        phone: this.state.roomReservationDetails.Phone,\r\n        duration: this.state.roomReservationDetails.Duration,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"\\n\\t Status: \", response.status);\r\n        this.setState({ toggleRoomListDisplay: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"\\n\\t There were errors...\");\r\n        this.setState({ formErrorDetails: error.response.data });\r\n        console.log(\"\\n\\t Errors: \", error.response.data);\r\n        console.log(\"\\n\\t State Errors: \", this.state.formErrorDetails);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let formFields = [];\r\n    for (let key in this.state.roomReservationForm) {\r\n      formFields.push(key);\r\n    }\r\n\r\n    return (\r\n        <div className='background-style'>\r\n            <section className=\"bg bg-textheading col-md-5\">\r\n                <h3 className=\"animate__animated animate__pulse col- mt-5 ml-5\">\r\n                    Please fill in the required details to see the available rooms.\r\n                </h3>\r\n            </section>\r\n\r\n            <section className=\"form-style\">\r\n                <div className=\"input-fields col-md-6 animate__animated animate__swing\" >\r\n                    {\r\n                        formFields.map( field => (\r\n                            <div key={field} className='form-group'>\r\n                                {/* place fields */}\r\n                                <h5 className=\"mt-3 text-white\">{field}:</h5>\r\n                                {/* place any field error */}\r\n                                <h4>{this.state.formErrorDetails[`${field.toLowerCase()}`]}</h4>\r\n                                <input className=\"form-control \"\r\n                                        type={ field === \"Email\" ? \"email\" : \r\n                                            field === \"Phone\" ? \"tel\" : \r\n                                            field === \"Duration\" ? \"number\" : \"text\" }\r\n                                    min={field === \"Duration\" ? 1 : \"\"}\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.roomReservationForm[field]}\r\n                                    name={field}\r\n                                    placeholder={\r\n                                        field === \"Duration\"\r\n                                        ? \"Please, how long are you staying?\"\r\n                                        : field === \"Email\"\r\n                                        ? \"Please enter an active email address\"\r\n                                        : field === \"Lastname\"\r\n                                        ? \"Your surname, please.\"\r\n                                        : \"\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className=\"submit-button\">\r\n                        <Button action=\"Available Rooms\" path=\"roomlist\"\r\n                            showRoomList={this.handleShowRoomList} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {this.state.toggleRoomListDisplay === true ? (\r\n            // We're passing 'room_type' to the state props, 'cos we'll need\r\n            // to call the roomlist, which will then querry the backend\r\n            // for a request with the 'room_type'.\r\n            <Redirect\r\n                to={{\r\n                pathname: \"/roomlist\",\r\n                state: { occupant_details: this.state.roomReservationDetails },\r\n                }}\r\n            />\r\n            ) : (\r\n            <Redirect to=\"/celestial/occupant-details\" />\r\n            )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoomReservation;\r\n","import React from \"react\";\r\nimport Button from \"../Utilities/Button\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../styles/roomListStyles.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'animate.css';\r\n\r\n\r\nclass RoomList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            listOfRooms: [],\r\n\r\n            // This state-variable becomes true when the user clicks on the \r\n            // \"Book room\" button.\r\n            permitRoomBooking: false,\r\n\r\n            chosenRoomDetails: {},\r\n\r\n            occupant_details: [],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ permitRoomBooking: false })\r\n\r\n        axios.get(`http://127.0.0.1:8000/roomslist/`)\r\n        .then( response => {\r\n            console.log(\"\\n\\t Rooms: \", response.data )\r\n            this.setState({ listOfRooms: response.data })\r\n\r\n        }).catch( () => {\r\n            this.setState({ listOfRooms: 'There are no available rooms yet'})\r\n        })\r\n    }\r\n\r\n    bookingHandler = (detail) => {\r\n        const room_details = detail;\r\n\r\n        this.setState({ permitRoomBooking: true })\r\n        this.setState({ chosenRoomDetails: room_details })\r\n        \r\n    }\r\n\r\n    render(){\r\n        const columnHeading = ['Room type', \"Room price\",\r\n                                \"Room number\", \"Status\"]\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.listOfRooms ?\r\n                    <React.Fragment>\r\n                        <div className='row'>\r\n                            <h2 className='col'>Available Rooms:</h2>\r\n                        </div>\r\n\r\n                        <table className='table table-striped table-hover table_style\r\n                                          animate__animated animate__heartBeat'>\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        columnHeading.map( (heading, index) => \r\n                                        <th key={index}>{ heading }</th>\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {\r\n                                    this.state.listOfRooms.map( detail => \r\n                                        <tr key={ detail.id } >\r\n                                            <td>{detail.room_type}</td> \r\n                                            <td>{detail.room_price}</td>\r\n                                            <td>{detail.room_number}</td>\r\n                                            <td>{detail.room_status}</td>\r\n\r\n                                            <span>\r\n                                                <Button action='Book room'\r\n                                                directToBookRoomPage={() => this.bookingHandler(detail)}/>    \r\n                                            </span>\r\n                                        </tr>\r\n                                    )   \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </React.Fragment>\r\n                        :\r\n                    <React.Fragment>\r\n                        <h3>There are no available rooms yet</h3>\r\n                    </React.Fragment>  \r\n                }                \r\n\r\n                {\r\n                    this.state.permitRoomBooking === true ?\r\n                    <Redirect to={{\r\n                        pathname: '/room-reservation',\r\n                        state: {\r\n                            room_details: this.state.chosenRoomDetails,\r\n                            occupant_details: this.state.occupant_details\r\n                        }\r\n                    }} \r\n                    />\r\n                    :\r\n                    <Redirect to='/roomlist' />\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList;","import React from 'react';\r\nimport 'animate.css';\r\nimport Button from \"../Utilities/Button\";\r\n\r\nimport '../styles/roomReservationStyles.css';\r\nimport 'animate.css';\r\n\r\n\r\nclass RoomReservation extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            room_details: {},\r\n\r\n            occupants_phone: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount (){\r\n        if ( this.props.location.state ) {\r\n            const { room_details } = this.props.location.state;\r\n            console.log(\"Room Details\", room_details)\r\n            \r\n            this.setState({ room_details })\r\n\r\n        }\r\n    }\r\n\r\n    handleChangePhone = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ occupants_phone: event.target.value })\r\n\r\n    }\r\n\r\n    render () {\r\n        let room_fields = [\r\n            'Room-type', 'Room-price', 'Room-number' \r\n        ]\r\n\r\n        let field_values = [\r\n            'room_type', 'room_price', 'room_number' \r\n        ]\r\n\r\n        return (\r\n            <div className='row reservation_style animate__animated animate__pulse'>\r\n\r\n                <section className='form-style form-group col-4'>\r\n                    <h3 className='mt-3'> Room Details:</h3>\r\n                    {\r\n                        room_fields.map( (field, index) => (\r\n                            <span key={index} >\r\n                                <h5 className='col-4'> {field} </h5> <br/>\r\n                                \r\n                                <input className='col form-control'\r\n                                    disabled={true}\r\n                                    name={field}\r\n                                    defaultValue={this.state.room_details[field_values[0]]}\r\n                                    value={this.state.room_details[field_values[0]]}\r\n\r\n                                    />\r\n                            </span>\r\n                        ))\r\n                    }\r\n\r\n                    <span className='mb-3'>\r\n                        <Button path='roomlist' \r\n                                text='Change room' />\r\n                    </span>\r\n                </section>\r\n\r\n                <section className='form-style form-group col-4 ml-2'>\r\n\r\n                    <h4> Please enter your phone number to proceed: </h4> \r\n                    <span>\r\n                        <input className='form-control'\r\n                                type=\"tel\"\r\n                                required='true'\r\n                                name='phone'\r\n                                value={ this.state.occupants_phone }\r\n                                onChange={this.handleChangePhone}\r\n                                placeholder='Please enter your phone number'\r\n                        /> <br/>\r\n                    </span>\r\n                    <strong>Please ensure the provided data is valid.</strong>     \r\n\r\n                    <span className='mt-4'>\r\n                        <Button path='payment'\r\n                                text='Proceed to payment'\r\n                                />\r\n                    </span>\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RoomReservation;","import React from 'react';\r\n\r\nimport { Homepage } from \"../Homepage\"\r\nimport Login from \"../Authentication/Login\";\r\nimport Signin from \"../Authentication/Signin\";\r\nimport { Undefined } from \"../Utilities/Undefined\";\r\n\r\nimport ForgotPassword from \"../Authentication/ForgotPassword\";\r\nimport UsernameLogin from \"../Authentication/UsernameLogin\";\r\n\r\nimport OccupantDetails from \"../UserComponents/OccupantDetails\";\r\nimport RoomList from \"../UserComponents/RoomList\";\r\nimport RoomReservation from '../UserComponents/RoomReservation';\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nexport const UnrestrictedRoutes = () => {\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path={['/', '/celestial']} exact component={ Homepage } />\r\n                <Route path='/celestial/login' component={ Login } />\r\n                <Route path='/celestial/signin' component={ Signin } />\r\n                <Route path='/celestial/forgot-password' component={ForgotPassword} />\r\n                <Route path='/celestial/username-login' component={UsernameLogin} />\r\n\r\n                <Route path='/celestial/occupant-details' component={OccupantDetails} />\r\n                <Route path='/celestial/roomlist' component={RoomList} />\r\n                <Route path='/celestial/room-reservation' component={ RoomReservation } />\r\n\r\n\r\n                {/* For any other url which is undefined... */}\r\n                <Route component={Undefined} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Switch } from \"react-router-dom\";\n\nimport { RestrictedRoutes } from \"./components/Routes/RestrictedRoutes\";\nimport { UnrestrictedRoutes } from \"./components/Routes/UnrestrictedRoutes\";\n\n\nexport const App = () => {\n  return (\n    <div >\n        <Switch>\n          <UnrestrictedRoutes />\n\n          <RestrictedRoutes />\n      </Switch>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router >\n      <App />\n    </Router>\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}